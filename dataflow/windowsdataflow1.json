{
	"name": "windowsdataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employees",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OoutputDataset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "window1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as string,",
				"          FIRST_NAME as string,",
				"          LAST_NAME as string,",
				"          EMAIL as string,",
				"          PHONE_NUMBER as string,",
				"          HIRE_DATE as string,",
				"          JOB_ID as string,",
				"          SALARY as string,",
				"          Prop_8 as string,",
				"          MANAGER_ID as string,",
				"          DEPARTMENT_ID as string,",
				"          Prop_11 as string,",
				"          {DEPARTMENT SECTION} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 window(over(DEPARTMENT_ID),",
				"     asc(SALARY, false),",
				"     Rankwise = denseRank(),",
				"     partitionBy('hash', 1)) ~> window1",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['windows.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EMPLOYEE_ID,",
				"          FIRST_NAME,",
				"          LAST_NAME,",
				"          EMAIL,",
				"          PHONE_NUMBER,",
				"          JOB_ID,",
				"          SALARY,",
				"          MANAGER_ID,",
				"          DEPARTMENT_ID,",
				"          {DEPARTMENT SECTION},",
				"          Rankwise",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}